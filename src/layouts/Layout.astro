---
import "@fontsource-variable/montserrat";
import "@/css/globals.css";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";

type Props = {
	title: string;
	description: string;
	robots?: boolean;
};

const { title, description, robots } = Astro.props;

export type { Props };
---

<html lang="de">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, maximum-scale=5"
		/>

		<title>{title} | Pascal Schaar</title>

		<meta name="title" content=`${title} | Pascal Scgaar` />
		<meta name="description" content={description} />

		<meta property="og:title" content=`${title} | Pascal Schaar` />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:locale" content="de_DE" />

		{/* <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> */}
		<link rel="icon" type="image/png" href="/favicon.png" />
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="/favicon-16x16.png"
		/>
		<link rel="manifest" href="/site.webmanifest" />
		<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#e88274" />
		<meta name="msapplication-TileColor" content="#224679" />
		<meta name="theme-color" content="#e88274" />

		<meta name="generator" content={Astro.generator} />

		<meta name="url" content={Astro.url} />
		<link rel="canonical" href={Astro.url} />
		{robots && <meta name="robots" content="noindex, nofollow" />}
	</head>
	<body class="bg-background text-foreground">
		<div class="grid min-h-dvh grid-rows-[auto_1fr_auto]">
			<Header />

			<main>
				<slot />
			</main>

			<Footer />
		</div>
	</body>
</html>

<script is:inline>
	const getThemePreference = () => {
		if (
			typeof localStorage !== "undefined" &&
			localStorage.getItem("theme")
		) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}

	console.log(
		`%c  

                                             888                   888
                                             888                   888
                                             888                   888
88888b.   8888b.  .d8888b   .d8888b  8888b.  888 .d8888b   .d8888b 88888b.   8888b.   8888b.  888d888
888 "88b     "88b 88K      d88P"        "88b 888 88K      d88P"    888 "88b     "88b     "88b 888P"
888  888 .d888888 "Y8888b. 888      .d888888 888 "Y8888b. 888      888  888 .d888888 .d888888 888
888 d88P 888  888      X88 Y88b.    888  888 888      X88 Y88b.    888  888 888  888 888  888 888
88888P"  "Y888888  88888P'  "Y8888P "Y888888 888  88888P'  "Y8888P 888  888 "Y888888 "Y888888 888
888
888
888

`,
		"font-family:monospace; color: #e88274;"
	);
</script>
